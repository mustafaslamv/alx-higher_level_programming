The ``1-my_list`` module
======================

Using ``MyList``
-------------------

import function:


    >>> MyList = __import__('1-my_list').MyList
    >>> my_list = MyList()

    >>> my_list.append(1)
    >>> my_list.append(4)
    >>> my_list.append(2)
    >>> my_list.append(3)
    >>> my_list.append(5)
    >>> print(my_list)
    [1, 4, 2, 3, 5]

    >>> my_list.print_sorted()
    [1, 2, 3, 4, 5]

    >>> my_list.clear()
    >>> print(my_list)
    []
    >>> my_list.print_sorted()
    []

    >>> my_list.append(1)
    >>> my_list.append(50.3)
    >>> my_list.print_sorted()
    [1, 50.3]
    >>> my_list.append(None)
    >>> my_list.print_sorted()
    Traceback (most recent call last):
    ...
    TypeError: '<' not supported between instances of 'NoneType' and 'float'

    >>> my_list[2] = 15
    >>> my_list[1] = 50
    >>> print(my_list)
    [1, 50, 15]
    >>> my_list.print_sorted()
    [1, 15, 50]
    >>> my_list.remove(50)
    >>> my_list.print_sorted()
    [1, 15]


    >>> my_list = MyList(None)
    Traceback (most recent call last):
    ...
    TypeError: 'NoneType' object is not iterable

    >>> my_list = MyList([10, 1, 5, 2])
    >>> my_list.print_sorted(1)
    Traceback (most recent call last):
    ...
    TypeError: print_sorted() takes 1 positional argument but 2 were given

    >>> my_list = MyList([1, 4, 2, 3], [1, 2, 3])
    Traceback (most recent call last):
    ...
    TypeError: list expected at most 1 argument, got 2

    >>> my_list = MyList(['aughhh',500])
    >>> my_list.print_sorted()
    Traceback (most recent call last):
    ...
    TypeError: '<' not supported between instances of 'int' and 'str'

    >>> my_list = MyList(['s', 'w', 'y', 'a'])
    >>> my_list.print_sorted()
    ['a', 's', 'w', 'y']

    >>> my_list = MyList([5, 4, 3, 9, 1])
    >>> my_list.print_sorted()
    [1, 3, 4, 5, 9]
